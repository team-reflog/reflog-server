plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id "com.diffplug.spotless" version "6.23.3"
    id "jacoco"
    id "org.sonarqube" version "4.4.1.3373"
}

group = 'com.github.team-reflog'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security:spring-security-crypto'

//    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
}

spotless {
    java {
        importOrder()

        removeUnusedImports()

        cleanthat()

        googleJavaFormat()
                .aosp()
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonar {
    properties {
        property "sonar.projectKey", "reflog-server"
        property "sonar.organization", "team-reflog"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


tasks.register('updateGitHooks', Copy) {
    from './scripts/pre-commit'
    into './.git/hooks'
}
compileJava.dependsOn(updateGitHooks)
